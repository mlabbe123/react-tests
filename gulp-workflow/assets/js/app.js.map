{"version":3,"sources":["CommentBox.jsx"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["var CommentList = React.createClass({\n    render: function() {\n        var commentNodes = this.props.data.map(function(comment) {\n            return (\n                <Comment author={comment.author} key={comment.id}>\n                    {comment.text}\n                </Comment>\n            );\n        });\n\n        return (\n            <div className=\"commentList\">\n                {commentNodes}\n            </div>\n        )\n    }\n});\n\nvar CommentForm = React.createClass({\n    getInitialState: function() {\n        return {author: '', text: ''};\n    },\n    handleAuthorChange: function(e) {\n        this.setState({author: e.target.value});\n    },\n    handleTextChange: function(e) {\n        this.setState({text: e.target.value});\n    },\n    handleSubmit: function(e) {\n        e.preventDefault();\n        var author = this.state.author.trim();\n        var text = this.state.text.trim();\n        if (!text || !author) {\n            return;\n        }\n        this.props.onCommentSubmit({author: author, text: text});\n        this.setState({author: '', text: ''});\n    },\n    render: function() {\n        return (\n            <form className=\"commentForm\" onSubmit={this.handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Your name\"\n                    value={this.state.author} \n                    onChange={this.handleAuthorChange}\n                />\n                <input \n                    type=\"text\"\n                    placeholder=\"Say something...\" \n                    value={this.state.text}\n                    onChange={this.handleTextChange}\n                />\n                <input type=\"submit\" value=\"Post\" />\n            </form>\n        );\n    }\n});\n\nvar CommentBox = React.createClass({\n    loadCommentsFromServer: function() {\n        $.ajax({\n            url: this.props.url,\n            dataType: 'json',\n            cache: false,\n            success: function(data) {\n                this.setState({data: data});\n            }.bind(this),\n            error: function(xhr, status, err) {\n                console.error(this.props.url, status, err.toString());\n            }.bind(this)\n        });\n    },\n    handleCommentSubmit: function(comment) {\n        var comments = this.state.data;\n        comment._id = Date.now();\n        var newComments = comments.concat([comment]);\n        this.setState({data: newComments})\n        $.ajax({\n            url: this.props.url,\n            dataType: 'json',\n            type: 'POST',\n            data: comment,\n            success: function(data) {\n                this.setState({data: data});\n            }.bind(this),\n            error: function(xhr, status, err) {\n                this.setState({data: comments});\n                console.error(this.props.url, status, err.toString());\n            }.bind(this)\n        });\n    },\n    getInitialState: function() {\n        return {data: []};\n    },\n    componentDidMount: function() {\n        this.loadCommentsFromServer();\n        setInterval(this.loadCommentsFromServer, this.props.pollInterval);\n    },\n    render: function() {\n        return (\n            <div className=\"CommentBox\">\n                <h1>Comments</h1>\n                <CommentList data={this.state.data}/>\n                <CommentForm onCommentSubmit={this.handleCommentSubmit}/>\n            </div>\n        );\n    }\n});\n\nvar Comment = React.createClass({\n    render: function() {    \n        return (\n            <div className=\"comment\">\n                <h2 className=\"commentAuthor\">\n                   {this.props.author} \n                </h2>\n                {this.props.children}\n            </div>\n        );\n    }\n});\n\nReactDOM.render(\n    <CommentBox url=\"/api/comments\" pollInterval={10000} />,\n    document.getElementById('content')\n);"],"sourceRoot":"/source/"}